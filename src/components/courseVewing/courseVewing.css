.blackRound {
  width: 30px;
  height: 30px;
  border: 1px solid rgb(250, 249, 248);
  border-radius: 15px;
}

.list {
  padding: 10px 0px;
  cursor: pointer;
  padding-left: 16px;
}
.list:hover {
  background-color: gray;
  padding: 10px 0;
  cursor: pointer;
  padding-left: 16px;
}
.bulet {
  list-style: inside;
}
.collapse-title,
.collapse > input[type="checkbox"],
.removePadding {
  grid-column-start: 1;
  grid-row-start: 1;
}
.removePadding {
  grid-row-start: 2;
  overflow: hidden;
  max-height: 0px;
  cursor: unset;
  transition: padding 0.2s ease-in-out, background-color 0.2s ease-in-out;
}
.collapse-open .removePadding,
.collapse:focus:not(.collapse-close) .removePadding,
.collapse:not(.collapse-close) input[type="checkbox"]:checked ~ .removePadding {
  max-height: 9000px;
}
.collapse-open .removePadding,
.collapse:focus:not(.collapse-close) .removePadding,
.collapse:not(.collapse-close) input[type="checkbox"]:checked ~ .removePadding {
  max-height: 9000px;
}
.collapse-open .removePadding,
.collapse:focus:not(.collapse-close) .removePadding,
.collapse:not(.collapse-close) input[type="checkbox"]:checked ~ .removePadding {
  max-height: 9000px;
}
.collapse-open :where(.removePadding),
.collapse:focus:not(.collapse-close) :where(.removePadding),
.collapse:not(.collapse-close)
  :where(input[type="checkbox"]:checked ~ .removePadding) {
  padding-bottom: 1rem /* 16px */;
  transition: padding 0.2s ease-in-out, background-color 0.2s ease-in-out;
}
.collapse-open :where(.removePadding),
.collapse:focus:not(.collapse-close) :where(.removePadding),
.collapse:not(.collapse-close)
  :where(input[type="checkbox"]:checked ~ .removePadding) {
  padding-bottom: 1rem /* 16px */;
  transition: padding 0.2s ease-in-out, background-color 0.2s ease-in-out;
}
.collapse-open :where(.removePadding),
.collapse:focus:not(.collapse-close) :where(.removePadding),
.collapse:not(.collapse-close)
  :where(input[type="checkbox"]:checked ~ .removePadding) {
  padding-bottom: 1rem /* 16px */;
  transition: padding 0.2s ease-in-out, background-color 0.2s ease-in-out;
}
/* reviewjs */
.bar {
  position: relative;
  width: 100%;
  appearance: none;
  overflow: hidden;
}
.bar::-moz-progress-bar {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
}
.bar:indeterminate::after {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  content: "";
  position: absolute;
  top: 0px;
  bottom: 0px;
  left: -40%;
  width: 33.333333%;

  animation: progress-loading 5s infinite ease-in-out;
}
.bar::-webkit-progress-bar {
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2;
}
.bar::-webkit-progress-value {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
}

/* annouchment */

.wid {
  width: 700px;
}
